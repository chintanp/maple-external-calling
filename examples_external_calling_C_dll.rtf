{\rtf1\ansi\ansicpg1252\deff0
{\fonttbl
{\f0 Times New Roman;}
{\f1 Courier New;}
{\f31\froman\fcharset161\fprq2 Times New Roman Greek;}}
{\colortbl
\red0\green0\blue0;
\red255\green255\blue255;
\red120\green0\blue14;
\red0\green0\blue255;
\red255\green0\blue255;
\red0\green128\blue128;
\red175\green0\blue175;
\red255\green0\blue0;
\red40\green120\blue40;
\red200\green0\blue200;
\red147\green0\blue15;
\red144\green144\blue144;
\red104\green64\blue92;
}
{\stylesheet
{\*\cs0\f1\cf0\fs24\i0\b0\ul0 \additive Help Variable;}
{\*\cs1\f0\cf0\fs24\i0\b0\ul0 \additive Left Justified Maple Output;}
{\*\cs2\f0\cf0\fs24\i0\b0\ul0 \additive Ordered List 1;}
{\*\cs3\f1\cf3\fs24\i0\b0\ul0 \additive Text Output;}
{\*\cs4\f0\cf0\fs24\i0\b0\ul0 \additive Ordered List 2;}
{\*\cs5\f0\cf0\fs24\i0\b0\ul0 \additive Ordered List 3;}
{\*\cs6\f0\cf0\fs24\i0\b0\ul0 \additive Ordered List 4;}
{\*\cs7\f0\cf0\fs24\i0\b0\ul0 \additive Ordered List 5;}
{\*\cs8\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small209214;}
{\*\cs9\f1\cf0\fs24\i0\b\ul0 \additive Maple Comment;}
{\*\cs10\f0\cf5\fs24\i\b0\ul \additive Popup;}
{\*\cs11\f0\cf6\fs24\i\b0\ul0 \additive Atomic Variable;}
{\*\cs12\f0\cf0\fs16\i0\b0\ul0 \additive Plot Text;}
{\*\cs13\f1\cf7\fs24\i0\b0\ul0 \additive Code;}
{\*\cs14\f0\cf0\fs24\i\b0\ul0 \additive 2D Math Italic;}
{\*\cs15\f0\cf0\fs2\i0\b0\ul0 \additive 2D Math Small;}
{\*\cs16\f0\cf0\fs24\i0\b0\ul0 \additive Author;}
{\*\cs17\f0\cf0\fs2\i0\b\ul0 \additive 2D Math Bold Small;}
{\*\cs18\f0\cf0\fs24\i0\b\ul0 \additive Help Bold;}
{\*\cs19\f0\cf0\fs24\i0\b\ul0 \additive Help Menus;}
{\*\cs20\f1\cf3\fs24\i0\b0\ul0 \additive Warning;}
{\*\cs21\f1\cf3\fs18\i0\b0\ul0 \additive Help;}
{\*\cs22\f0\cf0\fs24\i0\b0\ul0 \additive Help Normal;}
{\*\cs23\f1\cf8\fs24\i0\b0\ul0 \additive Diagnostic;}
{\*\cs24\f1\cf2\fs24\i0\b\ul0 \additive Maple Input;}
{\*\cs25\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small207210;}
{\*\cs26\f0\cf0\fs20\i0\b0\ul0 \additive Header and Footer;}
{\*\cs27\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small206;}
{\*\cs28\f0\cf0\fs16\i0\b0\ul0 \additive Output Labels;}
{\*\cs29\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small205;}
{\*\cs30\f0\cf0\fs24\i0\b\ul0 \additive Help Notes;}
{\*\cs31\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small210213;}
{\*\cs32\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small208209218;}
{\*\cs33\f0\cf0\fs24\i0\b0\ul \additive Help Underlined;}
{\*\cs34\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small208;}
{\*\cs35\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small210211;}
{\*\cs36\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small207;}
{\*\cs37\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small210212;}
{\*\cs38\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small209;}
{\*\cs39\f0\cf0\fs24\i0\b0\ul0 \additive Bullet Item;}
{\*\cs40\f0\cf0\fs24\i0\b0\ul0 \additive Maple Plot;}
{\*\cs41\f0\cf0\fs24\i0\b0\ul0 \additive Text;}
{\*\cs42\f0\cf0\fs20\i0\b\ul0 \additive Plot Title;}
{\*\cs43\f0\cf0\fs24\i0\b0\ul0 \additive Normal;}
{\*\cs44\f0\cf0\fs24\i0\b0\ul0 \additive Default;}
{\*\cs45\f0\cf0\fs24\i\b0\ul0 \additive Help Italic Bold;}
{\*\cs46\f1\cf9\fs24\i0\b\ul0 \additive Maple Input Placeholder;}
{\*\cs47\f0\cf0\fs24\i0\b0\ul0 \additive LaTeX;}
{\*\cs48\f0\cf0\fs24\i\b0\ul0 \additive Help Emphasized;}
{\*\cs49\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small211;}
{\*\cs50\f0\cf0\fs24\i0\b\ul0 \additive Equation Label;}
{\*\cs51\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small210;}
{\*\cs52\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small212;}
{\*\cs53\f0\cf0\fs24\i\b0\ul0 \additive Help Italic;}
{\*\cs54\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small212229;}
{\*\cs55\f1\cf0\fs24\i0\b\ul0 \additive Prompt;}
{\*\cs56\f0\cf0\fs24\i0\b\ul0 \additive 2D Math Bold;}
{\*\cs57\f0\cf5\fs24\i0\b0\ul \additive Hyperlink;}
{\*\cs58\f0\cf0\fs24\i0\b\ul0 \additive Caption Text;}
{\*\cs59\f0\cf0\fs36\i0\b\ul0 \additive Heading 1;}
{\*\cs60\f0\cf0\fs24\i\b0\ul0 \additive Heading 4;}
{\*\cs61\f0\cf0\fs32\i0\b\ul0 \additive Heading 2;}
{\*\cs62\f0\cf0\fs28\i\b\ul0 \additive Heading 3;}
{\*\cs63\f0\cf0\fs24\i\b\ul0 \additive Help Underlined Bold;}
{\*\cs64\f0\cf0\fs20\i0\b0\ul0 \additive Copyright;}
{\*\cs65\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small226;}
{\*\cs66\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small225;}
{\*\cs67\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small228;}
{\*\cs68\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small227;}
{\*\cs69\f1\cf3\fs24\i0\b0\ul \additive HyperlinkWarning;}
{\*\cs70\f0\cf10\fs24\i0\b0\ul \additive Dictionary Hyperlink;}
{\*\cs71\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small229;}
{\*\cs72\f0\cf0\fs24\i0\b0\ul0 \additive List Item;}
{\*\cs73\f0\cf0\fs24\i0\b0\ul0 \additive Dash Item;}
{\*\cs74\f0\cf0\fs24\i0\b0\ul0 \additive 2D Input;}
{\*\cs75\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small231;}
{\*\cs76\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small230;}
{\*\cs77\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small237;}
{\*\cs78\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small236;}
{\*\cs79\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small239;}
{\*\cs80\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small238;}
{\*\cs81\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small233;}
{\*\cs82\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small232;}
{\*\cs83\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small235;}
{\*\cs84\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small234;}
{\*\cs85\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small210223;}
{\*\cs86\f0\cf0\fs28\i0\b\ul0 \additive Help Heading;}
{\*\cs87\f1\cf0\fs20\i0\b0\ul0 \additive Fixed Width;}
{\*\cs88\f0\cf3\fs24\i0\b0\ul0 \additive 2D Output;}
{\*\cs89\f1\cf3\fs24\i0\b0\ul0 \additive Line Printed Output;}
{\*\cs90\f0\cf0\fs24\i0\b0\ul0 \additive Maple Output;}
{\*\cs91\f0\cf11\fs24\i0\b0\ul0 \additive 2D Inert Output;}
{\*\cs92\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small240;}
{\*\cs93\f0\cf0\fs24\i0\b0\ul0 \additive Page Number;}
{\*\cs94\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small242;}
{\*\cs95\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small241;}
{\*\cs96\f0\cf0\fs36\i0\b\ul0 \additive Annotation Title;}
{\*\cs97\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small248;}
{\*\cs98\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small247;}
{\*\cs99\f1\cf0\fs20\i0\b0\ul0 \additive Help Fixed;}
{\*\cs100\f1\cf4\fs24\i0\b0\ul \additive HyperlinkError;}
{\*\cs101\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small244;}
{\*\cs102\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small243;}
{\*\cs103\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small246;}
{\*\cs104\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small245;}
{\*\cs105\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small211225;}
{\*\cs106\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small;}
{\*\cs107\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small211223;}
{\*\cs108\f0\cf0\fs24\i0\b0\ul0 \additive 2D Math Symbol 2;}
{\*\cs109\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small211224;}
{\*\cs110\f0\cf0\fs24\i0\b0\ul0 \additive 2D Math;}
{\*\cs111\f1\cf0\fs24\i0\b\ul0 \additive Help Nonterminal;}
{\*\cs112\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small211222;}
{\*\cs113\f0\cf0\fs24\i0\b0\ul0 \additive Annotation Text;}
{\*\cs114\f0\cf12\fs24\i0\b\ul0 \additive Help Maple Name;}
{\*\cs115\f1\cf4\fs24\i0\b0\ul0 \additive Error;}
{\*\cs116\f0\cf0\fs36\i0\b\ul0 \additive Title;}
{\*\cs117\f0\cf0\fs24\i\b0\ul \additive Help Underlined Italic;}
{\*\cs118\f0\cf0\fs24\i0\b\ul0 \additive Caption Reference;}
{\*\cs119\f0\cf0\fs2\i\b0\ul0 \additive 2D Math Italic Small208209;}
{\*\cs120\f0\cf0\fs24\i0\b0\ul0 \additive 2D Comment;}
{\s121\ql \sl240 \slmult1 \sb80 \sa160 \pagebb0 \li0 \fi0 \ri0 Heading 1;}
{\s122\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 Warning;}
{\s123\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 Left Justified Maple Output;}
{\s124\qc \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 Fixed Width;}
{\s125\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 Help;}
{\s126\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 Heading 4;}
{\s127\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 Line Printed Output;}
{\s128\ql \sl240 \slmult1 \sb40 \sa160 \pagebb0 \li0 \fi0 \ri0 Heading 2;}
{\s129\qc \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 Maple Output;}
{\s130\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 Heading 3;}
{\s131\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 Diagnostic;}
{\s132\ql \sl240 \slmult1 \sb60 \sa60 \pagebb0 \li0 \fi0 \ri0 Ordered List 1;}
{\s133\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 Text Output;}
{\s134\ql \sl240 \slmult1 \sb60 \sa60 \pagebb0 \li720 \fi0 \ri0 Ordered List 2;}
{\s135\ql \sl240 \slmult1 \sb60 \sa60 \pagebb0 \li1440 \fi0 \ri0 Ordered List 3;}
{\s136\ql \sl240 \slmult1 \sb60 \sa60 \pagebb0 \li2160 \fi0 \ri0 Ordered List 4;}
{\s137\ql \sl240 \slmult1 \sb60 \sa60 \pagebb0 \li2880 \fi0 \ri0 Ordered List 5;}
{\s138\qc \sl240 \slmult1 \sb240 \sa240 \pagebb0 \li0 \fi0 \ri0 Annotation Title;}
{\s139\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 HyperlinkError;}
{\s140\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 HyperlinkWarning;}
{\s141\ql \sl240 \slmult1 \sb60 \sa60 \pagebb0 \li0 \fi0 \ri0 Bullet Item;}
{\s142\qc \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 Maple Plot;}
{\s143\ql \sl240 \slmult1 \sb60 \sa60 \pagebb0 \li0 \fi0 \ri0 List Item;}
{\s144\ql \sl240 \slmult1 \sb60 \sa60 \pagebb0 \li0 \fi0 \ri0 Dash Item;}
{\s145\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 Error;}
{\s146\qc \sl240 \slmult1 \sb240 \sa240 \pagebb0 \li0 \fi0 \ri0 Title;}
{\s147\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 Normal;}
{\s148\qc \sl240 \slmult1 \sb160 \sa160 \pagebb0 \li0 \fi0 \ri0 Author;}
}
{\info{\title {\info{\title examples_external_calling_C_dll}}
}}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs41\f0\cf0\fs24\i0\b0\ul0 {\f0\cf0\fs32\i0\b\ul \pagebb0 \li0 \fi0 \ri0 DLL Creation and Usage - Tips and Tricks}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 This Maple file tries to explain the procedure to create and use DLLs from C in Maple. Code hosted in repository: https://github.com/chintanp/maple-external-calling \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 Authors}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0  : Chintan Pathak, Tae-Jin Jang and Prof. Venkat Subramanian - Maple Lab, UW. Contact: vsubram@uw.edu\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 Requirements}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 : For the examples shown here to work, you will need to keep the DLL files as part of this zip folder in the same folder as this Maple file. Also the examples are tested to work with Maple 2016 (64-bit Standard version). Previous attempts to use the DLLs with 32-bit versions and classic worksheet were unsuccessful. If somebody can make these examples work in Classic worksheet, kindly let us know. OS: Windows - 7 (might work with newer Windows installations, wasn't tested). Also, read through the help page for define_external using ?define_external and other related pages. \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 Preliminary Setup}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 : As we found during our trials, and posts on Internet, the Compile Options for define_external might be incorrectly setup, so you might have to correct it. The exact value will depend on your Maple installation. \
}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 restart;}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 currentdir():}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 #printlevel:= 100;    # Uncomment this if you want more debug info for your commands.}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs41\f0\cf0\fs24\i0\b0\ul0 {\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 Save the Compile Options in a variable, as we want to inspect it, and if incorrect change it. \
}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 p:=define_external('COMPILE_OPTIONS');}
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 p := Record(COMPILER = "cl", CFLAGS = "-LD -Gz -Gy", COMPILE_ONLY_FLAG = "-c", INC_FLAG = "-I", COBJ_FLAG = "-o", FILE, FILE_EXT = ".c", INC_PATH = "\\"C:\\\\Program Files\\\\Maple 2016\\\\extern\\\\include\\"", OBJ_EXT = ".o", COMPILE_COMMAND = proc () local decc_r, decc_i; decc_r := cat(COMPILER, " ", CFLAGS); for decc_i in [INC_PATH] do decc_r := cat(decc_r, " ", INC_FLAG, "\\"", decc_i, "\\"") end do; decc_r := cat(decc_r, " ", LOBJ_FLAG, FILE, DLL_EXT); decc_r := cat(decc_r, " ", FILE, FILE_EXT); decc_r := cat(decc_r, " /link"); decc_r := cat(decc_r, " ", EXPORT_FLAG, FUNCTION); for decc_i in [LIBS] do decc_r := cat(decc_r, " \\"", decc_i, "\\"") end do; userinfo(3, 'define_external', `compile command: `, decc_r); return decc_r end proc, LINKER = "link", LINK_FLAGS = "", LIB_PATH = (), DLL_EXT = ".dll", SYS_LIBS = (), LIB, LIBS = "C:\\\\Program Files\\\\Maple 2016\\\\bin.X86_64_WINDOWS/maplec.lib", LIB_FLAG = "-L", LOBJ_FLAG = "-Fe", EXPORT_FLAG = "/export:", FUNCTION, LINK_COMMAND = ())}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs41\f0\cf0\fs24\i0\b0\ul0 {\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 As you can see in my system, the }{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 INC_PATH = "\\"C:\\\\Program Files\\\\Maple 2016\\\\extern\\\\include\\"" has extra quotes, effectively cancelling each other out. So, we need to set this based on the location on *your* - Maple/extern/include folder location. So, since my Maple 2016 is located in "C:\\Program Files", I am setting my INC_PATH = }{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 "C:\\\\Program Files\\\\Maple 2016\\\\extern\\\\include". The double slashes are needed in strings if you want to print a slash. Again, you might have to edit this based on your location of include folder. \
}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 p[INC_PATH]:=}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 "C:\\\\Program Files\\\\Maple 2016\\\\extern\\\\include";}
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 INC_PATH := "C:\\\\Program Files\\\\Maple 2016\\\\extern\\\\include"}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs41\f0\cf0\fs24\i0\b0\ul0 {\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 Check to see if the changes we made have taken effect. There might be some way to make this permanent, but for now, you will have to make this change for every Maple run. \
}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 eval(p);}
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 Record(COMPILER = "cl", CFLAGS = "-LD -Gz -Gy", COMPILE_ONLY_FLAG = "-c", INC_FLAG = "-I", COBJ_FLAG = "-o", FILE, FILE_EXT = ".c", INC_PATH = "C:\\\\Program Files\\\\Maple 2016\\\\extern\\\\include", OBJ_EXT = ".o", COMPILE_COMMAND = proc () local decc_r, decc_i; decc_r := cat(COMPILER, " ", CFLAGS); for decc_i in [INC_PATH] do decc_r := cat(decc_r, " ", INC_FLAG, "\\"", decc_i, "\\"") end do; decc_r := cat(decc_r, " ", LOBJ_FLAG, FILE, DLL_EXT); decc_r := cat(decc_r, " ", FILE, FILE_EXT); decc_r := cat(decc_r, " /link"); decc_r := cat(decc_r, " ", EXPORT_FLAG, FUNCTION); for decc_i in [LIBS] do decc_r := cat(decc_r, " \\"", decc_i, "\\"") end do; userinfo(3, 'define_external', `compile command: `, decc_r); return decc_r end proc, LINKER = "link", LINK_FLAGS = "", LIB_PATH = (), DLL_EXT = ".dll", SYS_LIBS = (), LIB, LIBS = "C:\\\\Program Files\\\\Maple 2016\\\\bin.X86_64_WINDOWS/maplec.lib", LIB_FLAG = "-L", LOBJ_FLAG = "-Fe", EXPORT_FLAG = "/export:", FUNCTION, LINK_COMMAND = ())}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 #infolevel[all] := 10;  # Uncomment this for debug info for your commands.}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs41\f0\cf0\fs24\i0\b0\ul0 {\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 DLL Creation: Several methods to create the DLL were tested including GCC, however the compiler that worked best with Maple 2016 was CL-64bit. "CL" comes bundled with Visual Studio and is available free with Visual Studio Community. To use the 64-bit version, open the developer command prompt for Visual Studio (tested with Visual Studio 2015) and navigate to location: "C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC". This location will vary based on your Visual Studio installation path etc. Once you cd to this location, run the command:\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0                vcvarsall amd64\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 If you see no error, then the command ran successfully. Now run: \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0                cl \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 and confirm from the output that the compiler is now 64-bit. Once this is done, the DLL can be created using the following command: \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0               cl -LD -Gz -Gy -Fedllname.dll name.c /link /export:func1 /export:func2 /export:func3 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 The command uses some flags, "-LD -Gz -Gy" for which explanation can be found on MSDN. Moving on, replace "dllname" in  "-Feddllname.dll" flag with the name you want for your DLL. "name.c" is the name of the C source file that you want to create the DLL from. "/link" links multiple files, and more details can be found elsewhere. "/export:func1 ..." represent the function you want to export from the C file. It can be one or many. Replace func1, func2, func3 with the names of the function in your C file. \
}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs41\f0\cf0\fs24\i0\b0\ul0 {\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 It spews some output, and should print succefully created dll file is everything works. It will also create some other files with extension ".obj", ".exp", ".lib", which maybe useful for other uses, but are not needed for the current usage. "dllname.dll" is the DLL that we need for further use. Presented below are few examples that run through the process of DLL creation and usage. \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs41\f0\cf0\fs24\i0\b0\ul0 {\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 Example 1: From Maple help file mult.c, http://de.maplesoft.com/support/help/Maple/view.aspx?path=examples/ExternalCalling,  \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0    \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 // Code\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0     int mult( int a, int b )\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0     \{\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0         return a * b;\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0     \}\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 // End code\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 A typical C function, can be converted into a DLL using the command:\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0     \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0     cl -LD -Gz -Gy -Femult.dll mult.c /link /export:mult\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 As described above, this should create mult.dll, mult.exp, mult.lib and mult.obj. We need only mult.dll and it is to be used as under:\
}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 mult_maple := define_external('mult', 'a'::integer[4], 'b'::integer[4], RETURN::integer[4], LIB="mult\\\\mult.dll");}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs41\f0\cf0\fs24\i0\b0\ul0 {\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 This is quite self-explanatory. We have created a function in maple called mult_maple, that references the function 'mult' with two integer arguments a, and b with an integer return value from file "mult.dll".\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 You can see that works below for integer values, and doesnt work for "float" or "double" values. \
}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 mult_maple(21, 3);   # If your answer is 63, then its success. }
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 63}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 mult_maple(2.1, 3);}
}
\par}
{\pard\plain
\s139\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs100\f1\cf4\fs24\i0\b0\ul {\f1\cf4\fs24\i0\b0\ul \pagebb0 \li0 \fi0 \ri0 }{\f1\cf4\fs24\i0\b0\ul \pagebb0 \li0 \fi0 \ri0 Error, invalid input: mult_maple expects its 1st argument, a, to be of type integer[4], but received 2.1}{\f1\cf4\fs24\i0\b0\ul \pagebb0 \li0 \fi0 \ri0 }
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs41\f0\cf0\fs24\i0\b0\ul0 {\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 Example 2: From Maple help file mat_mult.c, http://de.maplesoft.com/support/help/Maple/view.aspx?path=examples/ExternalCalling,\
}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs41\f0\cf0\fs24\i0\b0\ul0 {\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 // Code \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 void mat_mult( double *A, double *B, double *C, int I, int J, int K )\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \{\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0     int i, j, k;\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0     double t;\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0     for( i = 0; i < I; i++ ) \{\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0         for( k = 0; k < K; k++ ) \{\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0             t = 0.0;\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0             for( j = 0; j < J; j++ ) \{\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0                 t += A[i*J+j] * B[j*K+k];\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0             \}\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0             C[i*K+k] = t;\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0         \}\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0     \}\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \}  \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 // End Code\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 A slightly more involved function using pointers, that does matrix multiplication. Refer to the datatype conversion figure on the help page to find the corresponding maple datatype. Generate the DLL file using: \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0     \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0     cl -LD -Gz -Gy -Femat_mult.dll  mat_mult.c /link /export:mat_mult\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 This creates the files: mat_mult.dll, mat_mult.exp, mat_mult.lib, mat_mult.obj. \
}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 mat_mult_maple := define_external('mat_mult', \
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                                   'A'::ARRAY(datatype = float[8]),\
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                                   'B'::ARRAY(datatype = float[8]), }{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                                   'C'::ARRAY(datatype = float[8]),\
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                                   'i'::integer[4],  }{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                    \
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                                   'j'::integer[4],\
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                                   'k'::integer[4],\
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                                   LIB = "mat_mult\\\\mat_mult.dll"):}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs41\f0\cf0\fs24\i0\b0\ul0 {\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 Pointers need to be defined in a certain way. Also, argument names are case-insensitive and 'I' is a reserved word in Maple. Lets test this. \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0  }
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 A := Matrix([[10,20],[30,40]],datatype=float[8],order=C_order);}
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 A := Matrix(2, 2, \{(1, 1) = 10., (1, 2) = 20., (2, 1) = 30., (2, 2) = 40.\}, datatype = float[8], storage = rectangular, order = C_order, shape = [])}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 B := Matrix([[1.5,2.5,3.5],[4.5,5.5,6.5]],datatype=float[8],order=C_order);}
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 B := Matrix(2, 3, \{(1, 1) = 1.50000000000000, (1, 2) = 2.50000000000000, (1, 3) = 3.50000000000000, (2, 1) = 4.50000000000000, (2, 2) = 5.50000000000000, (2, 3) = 6.50000000000000\}, datatype = float[8], storage = rectangular, order = C_order, shape = [])}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 C := Matrix(2,3,datatype=float[8],order=C_order);}
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 C := Matrix(2, 3, \{\}, datatype = float[8], storage = rectangular, order = C_order, shape = [])}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 mat_mult_maple(A, B, C, 2, 2, 3);}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 C;}
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 Matrix(2, 3, \{(1, 1) = 105., (1, 2) = 135., (1, 3) = 165., (2, 1) = 225., (2, 2) = 295., (2, 3) = 365.\}, datatype = float[8], storage = rectangular, order = C_order, shape = [])}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 A.B;   # should be equal to C above.}
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 Matrix(2, 3, \{(1, 1) = 105., (1, 2) = 135., (1, 3) = 165., (2, 1) = 225., (2, 2) = 295., (2, 3) = 365.\}, datatype = float[8], storage = rectangular, order = Fortran_order, shape = [])}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs41\f0\cf0\fs24\i0\b0\ul0 {\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 As we see that C = A.B, therefore mat_mult_maple  is referencing the function mat_mult in mat_mult.dll. \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 As can be seen here, an empty array C is passed in the beginning to store the results of the computation. This is a common practise in C as we cannot return an array in C. \
}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 }
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs41\f0\cf0\fs24\i0\b0\ul0 {\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 Example 3: From maple help file newton.c, http://de.maplesoft.com/support/help/Maple/view.aspx?path=examples/ExternalCalling\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0  // Code\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 /* newton.c*/\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 #include <stdio.h>\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 #include <math.h>\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 double newton(\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0         double(*f) (double),\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0         double(*fprime) (double),\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0         double guess,\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0         double tolerance)\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \{\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0         while (fabs(f(guess)) > tolerance) \{\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0                 guess = guess - f(guess) / fprime(guess);\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0         \}\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0         return guess;\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \}\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 // End Code\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 This is a more complicated function, and requires an in-depth understanding of function pointers. So, for our purposes, we will define 'f', and 'fprime' as procedures in Maple or use unapply.  Generate the DLL using:\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0     cl -LD -Gz -Gy -Fenewton.dll newton.c  /link /export:newton\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 and use the generated DLL as under.    \
}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 newton_maple := define_external( 'newton',\
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                                  'f'::PROC( 'x'::float[8], 'RETURN'::float[8] ),\
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                                  'fprime'::PROC( 'x'::float[8], 'RETURN'::float[8]),\
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                                  'guess'::float[8],\
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                                  'tolerance'::float[8],\
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                                  'RETURN'::float[8],\
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                                  'WRAPPER',\
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                                  LIB="newton\\\\newton.dll");}
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 newton_maple := proc (f::\{"NULL", procedure\}, fprime::\{"NULL", procedure\}, guess::numeric, tolerance::numeric) options call_external, define_external(newton, f::(PROC(x::(float[8]), RETURN::(float[8]))), fprime::(PROC(x::(float[8]), RETURN::(float[8]))), guess::(float[8]), tolerance::(float[8]), RETURN::(float[8]), WRAPPER, LIB = "newton\\\\newton.dll"); call_external(8791640969216, 8791583887360, true, false, args) end proc}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs41\f0\cf0\fs24\i0\b0\ul0 {\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 This requires some explanation. Since the datatype of 'f' is type 'PROC ...', we need to pass another argument to 'define_external' called 'WRAPPER'. This creates a wrapper for the DLL and we see that executing this statement creates more files in our directory, i.e. our current directory: mwrap_newton.c, mwrap_newton.dll, mwrap_newton.exp, mwrap_newton.lib, and mwrap_newton.obj. Seems to follow a pattern similar to how we created the DLL. Infact, internally maple uses these files, though that is behind the scenes for us, and you do not need to save or transport these files, they will be auto-created every time the above "define_external" command is run. You just have to  make sure that the file "newton.dll" is available in the path specified by the argument "LIB". \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 Our usage of newton_maple is unaffected by whether it is created using "WRAPPER" or without. \
}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 f := unapply(x^2-3*x,x);}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 }
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 f := proc (x) options operator, arrow; x^2-3*x end proc}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 fprime := unapply(2*x-3,x);}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 }
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 fprime := proc (x) options operator, arrow; 2*x-3 end proc}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 newton_maple(f,fprime,2.1,1e-6);     # If your answer is around 3, then its success. }{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 }
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 3.00000000042632253}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 newton_maple(f,fprime,20.1,1e-6);    # Answer should be close to 3.}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 }
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 3.00000000318792104}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs41\f0\cf0\fs24\i0\b0\ul0 {\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 Try one more function. \
}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 f := unapply(x^2-3*x+sin(x),x);}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 }
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 f := proc (x) options operator, arrow; x^2-3*x+sin(x) end proc}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 fprime := unapply(2*x-3+cos(x),x);}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 }
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 fprime := proc (x) options operator, arrow; 2*x-3+cos(x) end proc}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 newton_maple(f,fprime,2.1,1e-6);     # If answer is around 2.92, then success. }{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 }
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 2.92738436417663417}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 newton_maple(f,fprime,20.1,1e-6);}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 }
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 2.92738436292475468}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 }
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs41\f0\cf0\fs24\i0\b0\ul0 {\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 Example 4 : rk4.c from John Burkardt https://people.sc.fsu.edu/~jburkardt/c_src/rk4/rk4.c\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 // Code not shown here as quite long. Found on the website and repository\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 The DLL generation command is slightly different this time, as we have the option of exporting more than one function from the same DLL. \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0     cl -LD -Gz -Gy -Ferk4.dll rk4.c /link /export:rk4 /export:rk4vec /export:timestamp\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 This exports three functions for our use rk4, rk4vec, and timestamp. Below is the use of rk4, and rk4vec. Timestamp just prints time. \
}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 rk4_maple := define_external("rk4", \
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                       't0' :: float[8], \
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                       'u0' :: float[8], \
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                       'dt' :: float[8], \
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                       'f' :: PROC('t' :: float[8], 'u' :: float[8], 'RETURN' :: float[8]), \
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                       'RETURN' ::float[8], \
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                       "WRAPPER", \
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                       LIB="rk4\\\\rk4.dll");}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 }
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 rk4_maple := proc (t0::numeric, u0::numeric, dt::numeric, f::\{"NULL", procedure\}) options call_external, define_external("rk4", t0::(float[8]), u0::(float[8]), dt::(float[8]), f::(PROC(t::(float[8]), u::(float[8]), RETURN::(float[8]))), RETURN::(float[8]), "WRAPPER", LIB = "rk4\\\\rk4.dll"); call_external(8791561015296, 8791561146576, true, false, args) end proc}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs41\f0\cf0\fs24\i0\b0\ul0 {\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 We have already seen a function of this type, so nothing novel here. Use demonstrated below. \
}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 dt := 0.1; pi := 3.14159265; t0 := 0.0; tmax := 12.0*pi; u0 := 0.5;    # Just some test values. }{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 }
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 dt := .1}
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 pi := 3.14159265}{\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 t0 := 0.}{\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 tmax := 37.69911180}{\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 u0 := .5}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 rk4_test_f := proc(t, u)\
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0    }{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 u*cos(t)\
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 end proc;}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 }
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 rk4_test_f := proc (t, u) u*cos(t) end proc}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 rk4_test_f(1, 1); # Testing that our procedure works}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 }
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 cos(1)}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 rk4_maple(t0, u0, dt, rk4_test_f);   # If the output is 0.}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 552493372846666664}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 , then success.}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 }
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 .552493372846666664}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 while tmax > t0 do\
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0    }{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 t1 := t0 + dt;\
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0    }{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 u1 := rk4_maple(t0, u0, dt, rk4_test_f);\
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0    }{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 t0 := t1;\
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0    }{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 u0 := u1;\
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 end do:}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 u1; # If output is 0}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 .500444110125136121, then success}
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 .500444110125136121}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs41\f0\cf0\fs24\i0\b0\ul0 {\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 Next, the vector version of rk4, i.e. rk4vec. \
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 }
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs41\f0\cf0\fs24\i0\b0\ul0 {\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 The same code did not work for the vector as the way the array/vectors are passed in C is not consistent with how Maple can interpret it. So while there may be other solutions, that authors invite you to present, we found that the base code had to be changed. Since the source code is accessible in this case, it was possible to do this, for third-party vendors, you might be limited by this fact. \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 Modified code: rk4_out.c and rk4_out.h hosted in the repository. \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 Generate the DLL:\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0     \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0      cl -LD -Gz -Gy -Ferk4_out.dll rk4_out.c /link /export:rk4 /export:rk4vec /export:timestamp\
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0   \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 This creates the DLL : rk4_out.dll that makes the function return values through the arguments rather than using the return statement.   \
}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 rk4vec_maple := define_external("rk4vec", \
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                                 't0' :: float[8], \
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                                 'm' :: integer[4], \
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                                 'u0' :: ARRAY(1..2,datatype=float[8]), \
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                                 'dt' :: float[8], \
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                                 'f' :: PROC('t' :: float[8], 'm' :: integer[4], 'u' :: ARRAY(1..2,datatype=float[8]), 'uout' :: ARRAY(1..2,datatype=float[8])), \
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                                 'out' :: ARRAY(1..2,datatype=float[8]), \
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                                 "WRAPPER", \
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0                                 LIB="rk4\\\\rk4_out.dll");}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 }
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 rk4vec_maple := proc (t0::numeric, m::(integer[4]), u0::\{"NULL", name, rtable\}, dt::numeric, f::\{"NULL", procedure\}, out::\{"NULL", name, rtable\}) options call_external, define_external("rk4vec", t0::(float[8]), m::(integer[4]), u0::(ARRAY(1 .. 2, datatype = float[8])), dt::(float[8]), f::(PROC(t::(float[8]), m::(integer[4]), u::(ARRAY(1 .. 2, datatype = float[8])), uout::(ARRAY(1 .. 2, datatype = float[8])))), out::(ARRAY(1 .. 2, datatype = float[8])), "WRAPPER", LIB = "rk4\\\\rk4_out.dll"); call_external(8791555051520, 8791555904176, false, false, args) end proc}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs41\f0\cf0\fs24\i0\b0\ul0 {\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 Now, the test. \
}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 dt := 0.2; n := 2; tmax := 12.0* 3.141592653589793; }
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 dt := .2}
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 n := 2}{\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 tmax := 37.69911185}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 t0 := 0.0; u0 :=Array(1..2,datatype=float[8]); u0[1] := 0.0; u0[2] := 1.0; u0out := Array(2); out:=Array(1..2,datatype=float[8]);}
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 t0 := 0.}
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 u0 := Array(1 .. 2, \{\}, datatype = float[8])}{\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 u0[1] := 0.}{\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 u0[2] := 1.0}{\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 u0out := Array(fill = 2, datatype = anything, storage = rectangular, order = Fortran_order)}{\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 out := Array(1 .. 2, \{\}, datatype = float[8])}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 rk4vec_test_f_out := proc(t, n, u, uout)\
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 uout(1) := u(2);\
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 uout(2) := -u(1);\
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 #print(whattype(uprime(1)));\
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 end proc;}
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 rk4vec_test_f_out := proc (t, n, u, uout) uout(1) := u(2); uout(2) := -u(1) end proc}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 rk4vec_test_f_out(t0, n, u0, u0out);}
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 Array(1 .. 2, \{1 = 1.\})}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 u0out(2);}
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 -0.}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs41\f0\cf0\fs24\i0\b0\ul0 {\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f0\cf0\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 The parantheses method of referring to the array elements is used as the square brackets give a array index exceeded error. \
}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 }
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 rk4vec_maple(t0, n, u0, dt, rk4vec_test_f_out, out);    # If no output and no crash, then we are good, and maybe successful, check "out"}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 }
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 out;    # }{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 Array(1 .. 2, \{1 = .198666666666667, 2 = .980066666666667\}, datatype = float[8])   -- means success}
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 Array(1 .. 2, \{1 = .198666666666667, 2 = .980066666666667\}, datatype = float[8])}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 while tmax > t0 do\
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 t1 := t0 + dt:\
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 rk4vec_maple(t0, n, u0, dt, rk4vec_test_f_out, out);\
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 t0 := t1:\
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 \
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 for i from 1 to n do \
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0   u0[i] := out[i]:\
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0   \
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 end do;\
}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 end do:}{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 }
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 u0;   # }{\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 Array(1 .. 2, \{1 = .100214415713974, 2 = .994881864735532\}, datatype = float[8])   --- means success}
}
\par}
{\pard\plain
\s127\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs89\f1\cf3\fs24\i0\b0\ul0 {\f1\cf3\fs24\i0\b0\ul0 \pagebb0 \li0 \fi0 \ri0 Array(1 .. 2, \{1 = .100214415713974, 2 = .994881864735532\}, datatype = float[8])}
}
\par}
{\pard\plain
\s147\ql\ql \sl240 \slmult1 \sb0 \sa0 \pagebb0 \li0 \fi0 \ri0 
{\cs24\f1\cf2\fs24\i0\b\ul0 > {\f1\cf2\fs24\i0\b\ul0 \pagebb0 \li0 \fi0 \ri0 }
}
\par}
}